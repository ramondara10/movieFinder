{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramon\\\\downloads\\\\movieFinder\\\\movie-finder\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n\n  const [movies, setmovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl); //console.log(request);\n\n      setmovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `poster ${isLargeRow && \"posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"MAdrXVcd66oyPMrmkShA7uyB4/U=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/ramon/downloads/movieFinder/movie-finder/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","Row","title","fetchUrl","isLargeRow","movies","setmovies","fetchData","request","get","data","results","console","log","map","movie","poster_path","backdrop_path","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,QAAQ,GAAG,qCAAjB;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAb,EAA8C;AAAA;;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,SAAf,GAA2B;AACzB,YAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUN,QAAV,CAAtB,CADyB,CAEzB;;AACAG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACD;;AACDD,IAAAA,SAAS;AACV,GARQ,EAQN,CAACJ,QAAD,CARM,CAAT;AAUAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGG,MAAM,CAACS,GAAP,CAAYC,KAAD,iBACV;AAEE,QAAA,SAAS,EAAG,UAASX,UAAU,IAAE,aAAc,EAFjD;AAGE,QAAA,GAAG,EAAG,GAAEJ,QAAS,GAAEI,UAAU,GAACW,KAAK,CAACC,WAAP,GAAmBD,KAAK,CAACE,aAAc,EAHtE;AAIE,QAAA,GAAG,EAAEF,KAAK,CAACG;AAJb,SACKH,KAAK,CAACI,EADX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAjCQlB,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport './Row.css'\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setmovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      //console.log(request);\r\n      setmovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  console.log(movies);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {/* title */}\r\n      <h2>{title}</h2>\r\n      <div className=\"posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n          key={movie.id}\r\n            className={`poster ${isLargeRow&&\"posterLarge\"}`}\r\n            src={`${base_url}${isLargeRow?movie.poster_path:movie.backdrop_path}`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* container */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n"]},"metadata":{},"sourceType":"module"}